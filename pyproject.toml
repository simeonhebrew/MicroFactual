[project]
name = "microfactual"
version = "0.1.0"
description = "A user-friendly Python framework for microbiome machine learning workflows"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Simeon Hebrew", email = "simeonhebrew@gmail.com"},
    {name = "Lawrence Adu-Gyamfi", email = "lagyamfi@outlook.com"}
]
maintainers = [
    {name = "Simeon Hebrew", email = "simeonhebrew@gmail.com"},
    {name = "Lawrence Adu-Gyamfi", email = "lagyamfi@outlook.com"}
]
keywords = [
    "microbiome",
    "machine-learning", 
    "bioinformatics",
    "metagenomics",
    "classification",
    "random-forest"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "dice-ml>=0.9",
    "explainerdashboard>=0.5.1",
    "matplotlib>=3.10.1",
    "pandas>=2.2.3",
    "ruff>=0.11.6",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.2",
    "skore>=0.10.0",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "pytest>=8.3.5",
    "pytest-cov>=6.2.1",
]
docs = [
    "sphinx>=8.1.3",
    "sphinx-autodoc-typehints>=3.0.1",
    "sphinx-rtd-theme>=3.0.2",
]

[project.scripts]
microfactual = "microfactual.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/microfactual"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "N", "D", "UP", "B", "A", "C90"]
ignore = ["E501", "N803"]
exclude = [".git", ".venv", "env_microbiome", "output", "__pycache__", "build", "dist"]
# Example: To ignore docstring rules in tests, uncomment below:
# per-file-ignores = {"test/*.py" = ["D"]}

[tool.ruff.format]
# Use ruff's built-in formatter for consistent code style
docstring-code-format = true
quote-style = "preserve"
indent-style = "space"
line-ending = "auto"
